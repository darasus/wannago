name: CI
 
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]
 
jobs:
  build:
      name: test:e2e
      timeout-minutes: 60
      runs-on: ubuntu-latest
      env:
        CI: true
        NEXT_PUBLIC_BASE_URL: "http://localhost:3000"

        TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        VERCEL_ANALYTICS_ID: ${{ secrets.VERCEL_ANALYTICS_ID }}
        VERCEL_WEB_ANALYTICS_ID: ${{ secrets.VERCEL_WEB_ANALYTICS_ID }}
        NEXT_PUBLIC_CLERK_FRONTEND_API: ${{ secrets.NEXT_PUBLIC_CLERK_FRONTEND_API }}
        CLERK_API_KEY: ${{ secrets.CLERK_API_KEY }}
        MIGRATE_DATABASE_URL: ${{ secrets.MIGRATE_DATABASE_URL }}
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        CLERK_JWT_KEY: ${{ secrets.CLERK_JWT_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        PRISMA_GENERATE_DATAPROXY: ${{ secrets.PRISMA_GENERATE_DATAPROXY }}
        UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
        UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
        CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        QSTASH_URL: ${{ secrets.QSTASH_URL }}
        QSTASH_TOKEN: ${{ secrets.QSTASH_TOKEN }}
        QSTASH_CURRENT_SIGNING_KEY: ${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
        QSTASH_NEXT_SIGNING_KEY: ${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
        NEXT_PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.NEXT_PUBLIC_AMPLITUDE_API_KEY }}

 
      steps:
        - uses: actions/cache@v3
        #   id: playwright-cache
        #   with:
        #     path: |
        #       ~/.cache/ms-playwright
        #     key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.json') }}

        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
 
        - uses: pnpm/action-setup@v2
          with:
            version: 7
 
        - name: Setup Node.js environment
          uses: actions/setup-node@v3
          with:
            node-version: 16
            cache: 'pnpm'
 
        - name: Install dependencies
          run: pnpm install

        - name: Cache Cypress binary
          uses: actions/cache@v3
          with:
            path: ~/.cache/Cypress
            key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
            restore-keys: |
              cypress-${{ runner.os }}-cypress-

        - name: install dependencies and verify Cypress
          env:
            CI: 1
          run: |
            pnpm install
            pnpm dlx cypress verify
            pnpm dlx cypress info
            pnpm dlx cypress version
            pnpm dlx cypress version --component package
            pnpm dlx cypress version --component binary
            pnpm dlx cypress version --component electron
            pnpm dlx cypress version --component node
        
        - name: Cypress run
          run: |
            pnpm build
            pnpm run-p --race start test:e2e
 
        # - name: Test
        #   run: pnpm test:e2e

        # - uses: actions/upload-artifact@v3
        #   if: always()
        #   with:
        #     name: playwright-report
        #     path: playwright-report/
        #     retention-days: 30

